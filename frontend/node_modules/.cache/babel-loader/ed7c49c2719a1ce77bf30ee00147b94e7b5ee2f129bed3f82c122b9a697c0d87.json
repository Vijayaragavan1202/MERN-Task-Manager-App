{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor for logging\napi.interceptors.request.use(config => {\n  var _config$method;\n  console.log(`Making ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} request to ${config.url}`);\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => {\n  return response.data;\n}, error => {\n  var _error$response, _error$response$data;\n  const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message || 'An error occurred';\n  console.error('API Error:', message);\n  return Promise.reject(new Error(message));\n});\n\n// Task API functions\nexport const getTasks = async (filters = {}) => {\n  const params = new URLSearchParams();\n  Object.entries(filters).forEach(([key, value]) => {\n    if (value) {\n      params.append(key, value);\n    }\n  });\n  const queryString = params.toString();\n  const url = queryString ? `/tasks?${queryString}` : '/tasks';\n  return api.get(url);\n};\nexport const getTask = async id => {\n  return api.get(`/tasks/${id}`);\n};\nexport const createTask = async taskData => {\n  return api.post('/tasks', taskData);\n};\nexport const updateTask = async (id, taskData) => {\n  return api.put(`/tasks/${id}`, taskData);\n};\nexport const updateTaskStatus = async (id, status) => {\n  return api.patch(`/tasks/${id}/status`, {\n    status\n  });\n};\nexport const deleteTask = async id => {\n  return api.delete(`/tasks/${id}`);\n};\nexport const getTaskStats = async () => {\n  return api.get('/tasks/stats/summary');\n};\n\n// Health check\nexport const checkHealth = async () => {\n  return api.get('/health');\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","data","_error$response","_error$response$data","message","Error","getTasks","filters","params","URLSearchParams","Object","entries","forEach","key","value","append","queryString","toString","get","getTask","id","createTask","taskData","post","updateTask","put","updateTaskStatus","status","patch","deleteTask","delete","getTaskStats","checkHealth"],"sources":["/Users/shrinithish/Desktop/mern-task-manager/frontend/src/services/taskService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\n// Create axios instance with default config\nconst api = axios.create({\n    baseURL: API_BASE_URL,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\n// Request interceptor for logging\napi.interceptors.request.use(\n    (config) => {\n        console.log(`Making ${config.method?.toUpperCase()} request to ${config.url}`);\n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n    (response) => {\n        return response.data;\n    },\n    (error) => {\n        const message = error.response?.data?.message || error.message || 'An error occurred';\n        console.error('API Error:', message);\n        return Promise.reject(new Error(message));\n    }\n);\n\n// Task API functions\nexport const getTasks = async (filters = {}) => {\n    const params = new URLSearchParams();\n\n    Object.entries(filters).forEach(([key, value]) => {\n        if (value) {\n            params.append(key, value);\n        }\n    });\n\n    const queryString = params.toString();\n    const url = queryString ? `/tasks?${queryString}` : '/tasks';\n\n    return api.get(url);\n};\n\nexport const getTask = async (id) => {\n    return api.get(`/tasks/${id}`);\n};\n\nexport const createTask = async (taskData) => {\n    return api.post('/tasks', taskData);\n};\n\nexport const updateTask = async (id, taskData) => {\n    return api.put(`/tasks/${id}`, taskData);\n};\n\nexport const updateTaskStatus = async (id, status) => {\n    return api.patch(`/tasks/${id}/status`, { status });\n};\n\nexport const deleteTask = async (id) => {\n    return api.delete(`/tasks/${id}`);\n};\n\nexport const getTaskStats = async () => {\n    return api.get('/tasks/stats/summary');\n};\n\n// Health check\nexport const checkHealth = async () => {\n    return api.get('/health');\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}